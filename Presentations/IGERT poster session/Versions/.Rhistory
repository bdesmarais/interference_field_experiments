## Number of nodes
n <- 1000
## Creating objects in which to store results
# Vectors to store betweenness centralities
BA.bet.centrality <- matrix(NA, num.nets, n)
ER.bet.centrality <- matrix(NA, num.nets, n)
# Vectors to store reciprocity values
BA.reciprocity <- rep(NA, num.nets)
ER.reciprocity <- rep(NA, num.nets)
# Vectors to store transitivity values
BA.transitivity <- rep(NA, num.nets)
ER.transitivity <- rep(NA, num.nets)
# Vectors to store reciprocity values
BA.deg.assortivity <- rep(NA, num.nets)
ER.deg.assortivity <- rep(NA, num.nets)
## Graph generation
cl <- makeCluster(4) #Setup for parallel computing
registerDoParallel(cl)
# We parallely generate networks
results <- foreach (i = 1:num.nets) %dopar% {
require(igraph)
# Generating Barabasi-Albert model with linear preferential attachment
BA.network <- barabasi.game(n = n, power = 1, m  = 10, directed = TRUE)
# Storing network properties of interest for BA mdoel
a <- betweenness(BA.network) #betweenness centrality
b <- reciprocity(BA.network) #level of reciprocity
c <- transitivity(BA.network) #level of transitivity
d <- assortativity.degree(BA.network) #level of degree assortivity
# Storing density of BA model
density <- edge_density(BA.network)
# Generating Erdos-Renyi model using density of BA model as probability of drawing an edge
ER.network <- erdos.renyi.game(n = n, p = density, directed = TRUE)
# Storing network properties of interest for ER mdoel
e <- betweenness(ER.network) #betweenness centrality
f <- reciprocity(ER.network) #level of reciprocity
g <- transitivity(ER.network) #level of transitivity
h <- assortativity.degree(ER.network) #level of degree assortivity
return(c(a, b, c, d, e, f, g, h))
}
stopCluster(cl)
## dopar command returns results as lists
## We fill-up the earlier created vectors with values generated from simulation
for (i in 1:num.nets){
BA.bet.centrality[i,] <- unlist(results[[i]])[1:1000]
ER.bet.centrality[i,] <- unlist(results[[i]])[1004:2003]
BA.reciprocity[i] <- unlist(results[[i]])[1001]
ER.reciprocity[i] <- unlist(results[[i]])[2004]
BA.transitivity[i] <-  unlist(results[[i]])[1002]
ER.transitivity[i] <- unlist(results[[i]])[2005]
BA.deg.assortivity[i] <-  unlist(results[[i]])[1003]
ER.deg.assortivity[i] <- unlist(results[[i]])[2006]
}
hist(BA.bet.centrality)
?beta
?qbeta
qbeta(0.95, 1, 14)
qbeta(0.05, 1, 14)
pbeta(0.95, 1, 14)
qnorm(0.5, 0, 1)
qnorm(0.95, 0, 1)
qbeta(0.95, 1, 14)
63.01^2 / (100*9)
sqrt(4.4114)
2/4
2/5
0.4/5
sqrt(0.08)
0.4241/0.5758
library(doParallel)
library(fields)
a <- "4-good"
b <- strsplit(a)
b <- strsplit(a, split="")
b
a
b <- strsplit(a, split="")
b
b[1]
b[[1]]
as.character(b)
unlist(b)
unlist(b)[1]
a <- c("4-good", "5=excellent")
a
c <- unlist(strsplit(a, split=""))[1]
c
c
c <- unlist(strsplit(a, split=""))
c
c <- strsplit(a, split="")
c
c <- strsplit(a, split="")[[2]]
c <- strsplit(a, split="")
c[[]]
c[[2]]
unlist(c[[2]])[1]
a <- c("4-good", "5=excellent")
b <- strsplit(a, split="")
a <- c("4-good", "5=excellent")
b <- strsplit(a, split="")
a
b
c <- for (i in 1:length(a)){
return(unlist(c[[i]])[1])
}
c <- rep(NA, length(a))
c <- rep(NA, length(a))
for (i in 1:length(a)){
c[i] <- unlist(c[[i]])[1]
}
c
length(a)
for (i in 1:length(a)){
c[i] <- unlist(b[[i]])[1]
}
d <- as.numeric(c)
exp(-0)
####
## Creating dummy network for poster
####
rm(list=ls())
library(igraph)
# Creating adjacency matrix
adj.mat[1,2] <- adj.mat[2,1] <- 1
adj.mat[2,3] <- adj.mat[3,2] <- 1
adj.mat[2,4] <- adj.mat[4,2] <- 1
adj.mat[3,4] <- adj.mat[4,3] <- 1
adj.mat <- matrix(0, 10, 10)
adj.mat[4,5] <- adj.mat[5,4] <- 1
adj.mat[4,6] <- adj.mat[6,4] <- 1
adj.mat[5,6] <- adj.mat[6,5] <- 1
adj.mat[5,8] <- adj.mat[8,5] <- 1
adj.mat[5,9] <- adj.mat[9,5] <- 1
adj.mat[6,7] <- adj.mat[7,6] <- 1
####
## Creating dummy network for poster
####
rm(list=ls())
library(igraph)
# Creating adjacency matrix
adj.mat <- matrix(0, 10, 10)
adj.mat[1,2] <- adj.mat[2,1] <- 1
adj.mat[2,4] <- adj.mat[4,2] <- 1
adj.mat[3,4] <- adj.mat[4,3] <- 1
adj.mat[4,5] <- adj.mat[5,4] <- 1
adj.mat[4,6] <- adj.mat[6,4] <- 1
adj.mat[5,6] <- adj.mat[6,5] <- 1
adj.mat[5,8] <- adj.mat[8,5] <- 1
adj.mat[5,9] <- adj.mat[9,5] <- 1
adj.mat[6,7] <- adj.mat[7,6] <- 1
adj.mat[7,8] <- adj.mat[8,7] <- 1
adj.mat[9,10] <- adj.mat[10,9] <- 1
# Assigning treatment/control to nodes as an attribute
nodes <- as.data.frame(c("C","C","T","C","T","T","T","C","T","C"))
# Defining some reference vectors for plotting
vertcols <- c("dodgerblue4","white")
labcols <- c("white","dodgerblue4")
categories <- c("T", "C")
# Plotting
net <- graph.adjacency(adj.mat, mode = "undirected")
cols <- vertcols[match(as.character(nodes[,1]),categories)]
lcols <- labcols[match(as.character(nodes[,1]),categories)]
set.seed(5)
plot(net,vertex.color = cols, vertex.size = 15, vertex.label = as.character(nodes[,1]),
vertex.label.color = lcols, vertex.label.cex = .85,
edge.color = "black",
layout=layout.fruchterman.reingold)
box(which = "plot")
box(which = "figure")
box(which = "inner")
box(which = "outer")
plot(net,vertex.color = cols, vertex.size = 15, vertex.label = as.character(nodes[,1]),
vertex.label.color = lcols, vertex.label.cex = .85,
edge.color = "black",
layout=layout.fruchterman.reingold)
box(which = "figure")
box(which = "figure", col = "black")
pdf("Dummy_network_plot.pdf")
plot(net,vertex.color = cols, vertex.size = 15, vertex.label = as.character(nodes[,1]),
vertex.label.color = lcols, vertex.label.cex = .85,
edge.color = "black",
layout=layout.fruchterman.reingold)
box(which = "figure", col = "black")
dev.off()
plot(net,vertex.color = cols, vertex.size = 15, vertex.label = as.character(nodes[,1]),
vertex.label.color = lcols, vertex.label.cex = .85,
edge.color = "black",
layout=layout.fruchterman.reingold)
box(which = "figure", col = "black")
pdf("Dummy_network_plot.pdf")
plot(net,vertex.color = cols, vertex.size = 15, vertex.label = as.character(nodes[,1]),
vertex.label.color = lcols, vertex.label.cex = .85,
edge.color = "black",
layout=layout.fruchterman.reingold)
box(which = "figure", col = "black")
dev.off()
plot(net,vertex.color = cols, vertex.size = 15, vertex.label = as.character(nodes[,1]),
vertex.label.color = lcols, vertex.label.cex = .85,
edge.color = "black",
layout=layout.fruchterman.reingold,
box(which = "figure", col = "black"))
pdf("Dummy_network_plot.jpg")
plot(net,vertex.color = cols, vertex.size = 15, vertex.label = as.character(nodes[,1]),
vertex.label.color = lcols, vertex.label.cex = .85,
edge.color = "black",
layout=layout.fruchterman.reingold)
dev.off()
cd
jpg("Dummy_network_plot.jpg")
pdf("Dummy_network_plot.pdf")
box(which = "figure", col = "black")
plot(net,vertex.color = cols, vertex.size = 15, vertex.label = as.character(nodes[,1]),
vertex.label.color = lcols, vertex.label.cex = .85,
edge.color = "black",
layout=layout.fruchterman.reingold)
dev.off()
pdf("Dummy_network_plot.pdf")
plot(net,vertex.color = cols, vertex.size = 15, vertex.label = as.character(nodes[,1]),
vertex.label.color = lcols, vertex.label.cex = .85,
edge.color = "black",
layout=layout.fruchterman.reingold)
box(which = "figure", col = "black")
dev.off()
abc <- plot(net,vertex.color = cols, vertex.size = 15, vertex.label = as.character(nodes[,1]),
vertex.label.color = lcols, vertex.label.cex = .85,
edge.color = "black",
layout=layout.fruchterman.reingold)
box(which = "figure", col = "black")
dev.copy(abc, "abc.pdf")
dev.copy(jpeg, "abc.pdf")
dev.off()
?dev.copy
blah()
plot(net,vertex.color = cols, vertex.size = 15, vertex.label = as.character(nodes[,1]),
vertex.label.color = lcols, vertex.label.cex = .85,
edge.color = "black",
layout=layout.fruchterman.reingold)
box(which = "figure", col = "black")
dev.copy(device = blah)
dev.off()
x11()
plot(net,vertex.color = cols, vertex.size = 15, vertex.label = as.character(nodes[,1]),
vertex.label.color = lcols, vertex.label.cex = .85,
edge.color = "black",
layout=layout.fruchterman.reingold)
box(which = "figure", col = "black")
dev.copy(device = x11)
dev.off()
x11()
plot(net,vertex.color = cols, vertex.size = 15, vertex.label = as.character(nodes[,1]),
vertex.label.color = lcols, vertex.label.cex = .85,
edge.color = "black",
layout=layout.fruchterman.reingold)
box(which = "figure", col = "black")
dev.copy(device = x11, "blah.jpg")
dev.off()
####
## Creating dummy network for poster
####
rm(list=ls())
library(igraph)
# Creating adjacency matrix
adj.mat <- matrix(0, 10, 10)
adj.mat[1,2] <- adj.mat[2,1] <- 1
adj.mat[2,3] <- adj.mat[3,2] <- 1
adj.mat[2,4] <- adj.mat[4,2] <- 1
adj.mat[3,4] <- adj.mat[4,3] <- 1
adj.mat[4,5] <- adj.mat[5,4] <- 1
adj.mat[4,6] <- adj.mat[6,4] <- 1
adj.mat[5,6] <- adj.mat[6,5] <- 1
adj.mat[5,8] <- adj.mat[8,5] <- 1
adj.mat[5,9] <- adj.mat[9,5] <- 1
adj.mat[6,7] <- adj.mat[7,6] <- 1
adj.mat[7,8] <- adj.mat[8,7] <- 1
adj.mat[9,10] <- adj.mat[10,9] <- 1
# Assigning treatment/control to nodes as an attribute
nodes <- as.data.frame(c("C","C","T","C","T","T","T","C","T","C"))
# Defining some reference vectors for plotting
vertcols <- c("dodgerblue4","white")
labcols <- c("white","dodgerblue4")
categories <- c("T", "C")
# Plotting
net <- graph.adjacency(adj.mat, mode = "undirected")
cols <- vertcols[match(as.character(nodes[,1]),categories)]
lcols <- labcols[match(as.character(nodes[,1]),categories)]
set.seed(5)
abc <- plot(net,vertex.color = cols, vertex.size = 15, vertex.label = as.character(nodes[,1]),
vertex.label.color = lcols, vertex.label.cex = .85,
edge.color = "black",
layout=layout.fruchterman.reingold)
box(which = "figure", col = "black")
pdf("Dummy_network_plot.pdf")
plot(net,vertex.color = cols, vertex.size = 15, vertex.label = as.character(nodes[,1]),
vertex.label.color = lcols, vertex.label.cex = .85,
edge.color = "black",
layout=layout.fruchterman.reingold)
box(which = "figure", col = "black")
dev.off()
abc <- plot(net,vertex.color = cols, vertex.size = 15, vertex.label = as.character(nodes[,1]),
vertex.label.color = lcols, vertex.label.cex = .85,
edge.color = "black",
layout=layout.fruchterman.reingold)
box(which = "figure", col = "black")
####
## Creating dummy network for poster
####
rm(list=ls())
library(igraph)
# Creating adjacency matrix
adj.mat <- matrix(0, 10, 10)
adj.mat[1,2] <- adj.mat[2,1] <- 1
adj.mat[2,3] <- adj.mat[3,2] <- 1
adj.mat[2,4] <- adj.mat[4,2] <- 1
adj.mat[3,4] <- adj.mat[4,3] <- 1
adj.mat[4,5] <- adj.mat[5,4] <- 1
adj.mat[4,6] <- adj.mat[6,4] <- 1
adj.mat[5,6] <- adj.mat[6,5] <- 1
adj.mat[5,8] <- adj.mat[8,5] <- 1
adj.mat[5,9] <- adj.mat[9,5] <- 1
adj.mat[6,7] <- adj.mat[7,6] <- 1
adj.mat[7,8] <- adj.mat[8,7] <- 1
adj.mat[9,10] <- adj.mat[10,9] <- 1
# Assigning treatment/control to nodes as an attribute
nodes <- as.data.frame(c("C","C","T","C","T","T","T","C","T","C"))
# Defining some reference vectors for plotting
vertcols <- c("dodgerblue4","white")
labcols <- c("white","dodgerblue4")
categories <- c("T", "C")
# Plotting
net <- graph.adjacency(adj.mat, mode = "undirected")
cols <- vertcols[match(as.character(nodes[,1]),categories)]
lcols <- labcols[match(as.character(nodes[,1]),categories)]
set.seed(5)
plot(net,vertex.color = cols, vertex.size = 15, vertex.label = as.character(nodes[,1]),
vertex.label.color = lcols, vertex.label.cex = .85,
edge.color = "black",
layout=layout.fruchterman.reingold)
box(which = "figure", col = "black")
pdf("Dummy_network_plot.pdf")
plot(net,vertex.color = cols, vertex.size = 15, vertex.label = as.character(nodes[,1]),
vertex.label.color = lcols, vertex.label.cex = .85,
edge.color = "black",
layout=layout.fruchterman.reingold)
box(which = "figure", col = "black")
dev.off()
####
## Creating dummy network for poster
####
rm(list=ls())
library(igraph)
# Creating adjacency matrix
adj.mat <- matrix(0, 10, 10)
adj.mat[1,2] <- adj.mat[2,1] <- 1
adj.mat[2,3] <- adj.mat[3,2] <- 1
adj.mat[2,4] <- adj.mat[4,2] <- 1
adj.mat[3,4] <- adj.mat[4,3] <- 1
adj.mat[4,5] <- adj.mat[5,4] <- 1
adj.mat[4,6] <- adj.mat[6,4] <- 1
adj.mat[5,6] <- adj.mat[6,5] <- 1
adj.mat[5,8] <- adj.mat[8,5] <- 1
adj.mat[5,9] <- adj.mat[9,5] <- 1
adj.mat[6,7] <- adj.mat[7,6] <- 1
adj.mat[7,8] <- adj.mat[8,7] <- 1
adj.mat[9,10] <- adj.mat[10,9] <- 1
# Assigning treatment/control to nodes as an attribute
nodes <- as.data.frame(c("C","C","T","C","T","T","T","C","T","C"))
# Defining some reference vectors for plotting
vertcols <- c("dodgerblue4","white")
labcols <- c("white","dodgerblue4")
categories <- c("T", "C")
# Plotting
net <- graph.adjacency(adj.mat, mode = "undirected")
cols <- vertcols[match(as.character(nodes[,1]),categories)]
lcols <- labcols[match(as.character(nodes[,1]),categories)]
set.seed(5)
plot(net,vertex.color = cols, vertex.size = 15,
vertex.label = as.character(nodes[,1]),
vertex.label.color = lcols, vertex.label.cex = .85,
edge.color = "black",
layout=layout.fruchterman.reingold)
box(which = "figure", col = "black")
pdf("Dummy_network_plot.pdf")
plot(net,vertex.color = cols, vertex.size = 15, vertex.label = as.character(nodes[,1]),
vertex.label.color = lcols, vertex.label.cex = .85,
edge.color = "black",
layout=layout.fruchterman.reingold)
box(which = "figure", col = "black")
dev.off()
plot(net,vertex.color = cols, vertex.size = 15,
####
## Creating dummy network for poster
####
rm(list=ls())
library(igraph)
# Creating adjacency matrix
adj.mat <- matrix(0, 10, 10)
adj.mat[1,2] <- adj.mat[2,1] <- 1
adj.mat[2,3] <- adj.mat[3,2] <- 1
adj.mat[2,4] <- adj.mat[4,2] <- 1
adj.mat[3,4] <- adj.mat[4,3] <- 1
adj.mat[4,5] <- adj.mat[5,4] <- 1
adj.mat[4,6] <- adj.mat[6,4] <- 1
adj.mat[5,6] <- adj.mat[6,5] <- 1
adj.mat[5,8] <- adj.mat[8,5] <- 1
adj.mat[5,9] <- adj.mat[9,5] <- 1
adj.mat[6,7] <- adj.mat[7,6] <- 1
adj.mat[7,8] <- adj.mat[8,7] <- 1
adj.mat[9,10] <- adj.mat[10,9] <- 1
# Assigning treatment/control to nodes as an attribute
nodes <- as.data.frame(c("C","C","T","C","T","T","T","C","T","C"))
# Defining some reference vectors for plotting
vertcols <- c("dodgerblue4","white")
labcols <- c("white","dodgerblue4")
categories <- c("T", "C")
# Plotting
net <- graph.adjacency(adj.mat, mode = "undirected")
cols <- vertcols[match(as.character(nodes[,1]),categories)]
lcols <- labcols[match(as.character(nodes[,1]),categories)]
set.seed(5)
plot(net,vertex.color = cols, vertex.size = 15,
vertex.label = as.character(nodes[,1]),
vertex.label.color = lcols, vertex.label.cex = .85,
edge.color = "black",
layout=layout.fruchterman.reingold)
box(which = "figure", col = "black")
pdf("Dummy_network_plot.pdf")
plot(net,vertex.color = cols, vertex.size = 15, vertex.label = as.character(nodes[,1]),
vertex.label.color = lcols, vertex.label.cex = .85,
edge.color = "black",
layout=layout.fruchterman.reingold)
box(which = "figure", col = "black")
dev.off()
plot(net,vertex.color = cols, vertex.size = 15,
vertex.label = as.character(nodes[,1]),
vertex.label.color = lcols, vertex.label.cex = .85,
edge.color = "black",
layout=layout.fruchterman.reingold)
box(which = "figure", col = "black")
####
## Creating dummy network for poster
####
rm(list=ls())
library(igraph)
# Creating adjacency matrix
adj.mat <- matrix(0, 10, 10)
adj.mat[1,2] <- adj.mat[2,1] <- 1
adj.mat[2,3] <- adj.mat[3,2] <- 1
adj.mat[2,4] <- adj.mat[4,2] <- 1
adj.mat[3,4] <- adj.mat[4,3] <- 1
adj.mat[4,5] <- adj.mat[5,4] <- 1
adj.mat[4,6] <- adj.mat[6,4] <- 1
adj.mat[5,6] <- adj.mat[6,5] <- 1
adj.mat[5,8] <- adj.mat[8,5] <- 1
adj.mat[5,9] <- adj.mat[9,5] <- 1
adj.mat[6,7] <- adj.mat[7,6] <- 1
adj.mat[7,8] <- adj.mat[8,7] <- 1
adj.mat[9,10] <- adj.mat[10,9] <- 1
# Assigning treatment/control to nodes as an attribute
nodes <- as.data.frame(c("C","C","T","C","T","T","T","C","T","C"))
vertcols <- c("dodgerblue4","white")
labcols <- c("white","dodgerblue4")
categories <- c("T", "C")
# Plotting
net <- graph.adjacency(adj.mat, mode = "undirected")
cols <- vertcols[match(as.character(nodes[,1]),categories)]
lcols <- labcols[match(as.character(nodes[,1]),categories)]
set.seed(5)
plot(net, vertex.color = cols, vertex.size = 15,
vertex.label = as.character(nodes[,1]),
vertex.label.color = lcols, vertex.label.cex = .85,
edge.color = "black",
layout=layout.fruchterman.reingold)
setwd("D:/Dropbox/Interference_in_Field_Experiments/Presentations/IGERT poster session")
rm(list=ls())
library(igraph)
# Creating adjacency matrix
adj.mat <- matrix(0, 10, 10)
adj.mat[1,2] <- adj.mat[2,1] <- 1
adj.mat[2,3] <- adj.mat[3,2] <- 1
adj.mat[2,4] <- adj.mat[4,2] <- 1
adj.mat[3,4] <- adj.mat[4,3] <- 1
adj.mat[4,5] <- adj.mat[5,4] <- 1
adj.mat[4,6] <- adj.mat[6,4] <- 1
adj.mat[5,6] <- adj.mat[6,5] <- 1
adj.mat[5,8] <- adj.mat[8,5] <- 1
adj.mat[5,9] <- adj.mat[9,5] <- 1
adj.mat[6,7] <- adj.mat[7,6] <- 1
adj.mat[7,8] <- adj.mat[8,7] <- 1
adj.mat[9,10] <- adj.mat[10,9] <- 1
# Assigning treatment/control to nodes as an attribute
nodes <- as.data.frame(c("C","C","T","C","T","T","T","C","T","C"))
# Defining some reference vectors for plotting
vertcols <- c("dodgerblue4","white")
labcols <- c("white","dodgerblue4")
categories <- c("T", "C")
# Plotting
net <- graph.adjacency(adj.mat, mode = "undirected")
cols <- vertcols[match(as.character(nodes[,1]),categories)]
lcols <- labcols[match(as.character(nodes[,1]),categories)]
set.seed(5)
plot(net, vertex.color = cols, vertex.size = 25,
vertex.label = as.character(nodes[,1]),
vertex.label.color = lcols, vertex.label.cex = .85,
edge.color = "black",
layout=layout.fruchterman.reingold)
box(which = "plot", col = "dodgerblue4")
plot(net, vertex.color = cols, vertex.size = 20,
vertex.label = as.character(nodes[,1]),
vertex.label.color = lcols, vertex.label.cex = .85,
edge.color = "black",
layout=layout.fruchterman.reingold)
box(which = "plot", col = "dodgerblue4")
